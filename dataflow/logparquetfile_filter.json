{
	"name": "logparquetfile_filter",
	"properties": {
		"folder": {
			"name": "Udemy_DP203"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Parquet1",
						"type": "DatasetReference"
					},
					"name": "logparquet"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSynapseAnalyticsTable7",
						"type": "DatasetReference"
					},
					"name": "logparquettable"
				}
			],
			"transformations": [
				{
					"name": "filternullrows"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Correlationid as string,",
				"          Operationname as string,",
				"          Status as string,",
				"          Eventcategory as string,",
				"          Level as string,",
				"          Time as timestamp,",
				"          Subscription as string,",
				"          Eventinitiatedby as string,",
				"          Resourcetype as string,",
				"          Resourcegroup as string,",
				"          Resource as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> logparquet",
				"logparquet filter(!(isNull({Resourcegroup}))) ~> filternullrows",
				"filternullrows sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Correlationid as string,",
				"          Operationname as string,",
				"          Status as string,",
				"          Eventcategory as string,",
				"          Level as string,",
				"          Time as timestamp,",
				"          Subscription as string,",
				"          Eventinitiatedby as string,",
				"          Resourcetype as string,",
				"          Resourcegroup as string,",
				"          Resource as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     staged: true,",
				"     allowCopyCommand: true,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> logparquettable"
			]
		}
	}
}